<?xml version="1.0" encoding="utf-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<!--如果不定义webAppRootKey参数，那么webAppRootKey就是缺省的"webapp.root"。但最好设置，以免项目之间的名称冲突。
		定义以后，在Web Container启动时将把ROOT的绝对路径写到系统变量里。
		然后log4j的配置文件里就可以用${ mip.root }来表示Web目录的绝对路径，把log文件存放于webapp中。
		此参数用于后面的“Log4jConfigListener”-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>mip.root</param-value>
	</context-param>

	<!--Spring ApplicationContext配置文件的路径。可使用通配符，多个路径用逗号分隔。
		此参数用于后面的“Spring-Context loader”-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/classes/run-applicationContext*.xml,/WEB-INF/classes/applicationContext*.xml
		</param-value>
	</context-param>

	<!--由Spring载入的Log4j配置文件位置-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>

	<!--famous Character Encoding filter-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>login</filter-name>
		<filter-class>
			com.dheaven.mip.web.filter.LoginFilter
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>login</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--解决中文乱码-->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<!-- 动态地址静态化 -->
	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>
			org.tuckey.web.filters.urlrewrite.UrlRewriteFilter
		</filter-class>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>WARN</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 解决四川彩信上行问题 -->
	<filter>
		<filter-name>isagFilter</filter-name>
		<filter-class>
			com.dheaven.mip.web.filter.IsagFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>isagFilter</filter-name>
		<url-pattern>/services/MMSMessageNotification</url-pattern>
	</filter-mapping>

	<!--Spring log4j Config loader-->
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>

	<!-- Spring / Axis 1.0 -->
	<listener>
		<listener-class>
			org.apache.axis.transport.http.AxisHTTPSessionListener
		</listener-class>
	</listener>

	<!-- MIP Architecture Framework -->
	<listener>
		<listener-class>
			com.dheaven.mip.plugin.web.ServiceContextPluginLoadListener
		</listener-class>
	</listener>

	<!--Spring Context loader-->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

<listener>
		<listener-class>
			com.dheaven.mip.plugin.web.ServerSessionListener
		</listener-class>
	</listener>

	<!-- DWR servlet,生产环境应该Debug为false -->
	<servlet>
		<description>DWR controller servlet</description>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>
			org.directwebremoting.spring.DwrSpringServlet
		</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>1</param-value>
		</init-param>
		  <init-param>     
      <param-name>crossDomainSessionSecurity</param-name>     
       <param-value>false</param-value>     
        </init-param> 

	</servlet>

	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>mip</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/mip*servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>InitiaServlet</servlet-name>
		<servlet-class>com.dheaven.mip.web.InitiaServlet</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>

	<servlet>
		<description>Apache-Axis Servlet</description>
		<servlet-name>AxisServlet</servlet-name>
		<servlet-class>
			org.apache.axis.transport.http.AxisServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>mip</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>mip</servlet-name>
		<url-pattern>/psmlInterface</url-pattern>
	</servlet-mapping>
	<!-- 基础组件SFP，MSC3入口配置 -->
	<servlet>
		<servlet-name>msc3interface</servlet-name>
		<servlet-class>
			com.dheaven.mip.web.MSC3HttpInteface
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>msc3interface</servlet-name>
		<url-pattern>/http.do</url-pattern>
	</servlet-mapping>
	
	
	<!-- WAP m.do，不在这里配置WAP将无法上传 -->
	<servlet>
		<servlet-name>wapHttpInteface1</servlet-name>
		<servlet-class>
			com.dheaven.mip.plugin.wap.web.WapHttpInteface
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>wapHttpInteface1</servlet-name>
		<url-pattern>/wap/m.do</url-pattern>
	</servlet-mapping>
	

	<!-- 公文编辑 -->
	<servlet>
		<servlet-name>Connector</servlet-name>
		<servlet-class>
			com.fredck.FCKeditor.connector.ConnectorServlet
		</servlet-class>
		<init-param>
			<param-name>baseDir</param-name>
			<param-value>/upload/</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		<load-on-startup>5</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>SimpleUploader</servlet-name>
		<servlet-class>
			com.fredck.FCKeditor.uploader.SimpleUploaderServlet
		</servlet-class>
		<init-param>
			<param-name>baseDir</param-name>
			<param-value>/upload/</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>enabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsFile</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsFile</param-name>
			<param-value>
				php|php3|php5|phtml|asp|aspx|ascx|jsp|cfm|cfc|pl|bat|exe|dll|reg|cgi
			</param-value>
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsImage</param-name>
			<param-value>jpg|gif|jpeg|png|bmp</param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsImage</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsFlash</param-name>
			<param-value>swf|fla</param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsFlash</param-name>
			<param-value></param-value>
		</init-param>
		<load-on-startup>5</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Connector</servlet-name>
		<url-pattern>
			/fckeditor/FCKeditor/editor/filemanager/browser/default/connectors/jsp/connector
		</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SimpleUploader</servlet-name>
		<url-pattern>
			/fckeditor/FCKeditor/editor/filemanager/upload/simpleuploader
		</url-pattern>
	</servlet-mapping>


	<!-- 
		<servlet>
		<servlet-name>xfire</servlet-name>
		<servlet-class>
		org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<load-on-startup>2</load-on-startup>
		</servlet>
		
		
		<servlet-mapping>
		<servlet-name>xfire</servlet-name>
		<url-pattern>/dhmiservice/*</url-pattern>
		</servlet-mapping>
	-->

	<mime-mapping>
		<extension>wsdl</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xsd</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jad</extension>
		<mime-type>text/vnd.sun.j2me.app-descriptor</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jar</extension>
		<mime-type>application/java-archive</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>cab</extension>
		<mime-type>application/msdownload</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>cer</extension>
		<mime-type>text/vnd.wap.hashed-certificate</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>wbmp</extension>
		<mime-type>image/vnd.wap.wbmp</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>wml</extension>
		<mime-type>text/vnd.wap.wml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>wmlc</extension>
		<mime-type>application/vnd.wap.wmlc</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>wmls</extension>
		<mime-type>text/vnd.wap.wmlscript</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>wmlsc</extension>
		<mime-type>application/vnd.wap.wmlscriptc</mime-type>
	</mime-mapping>


	<jsp-config>
		<taglib>
			<taglib-uri>/fckeditor</taglib-uri>
			<taglib-location>/WEB-INF/FCKeditor.tld</taglib-location>
		</taglib>
	</jsp-config>

	<welcome-file-list>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
</web-app>
